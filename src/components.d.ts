/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface CustomInactiveLogout {
        "logoutTimeInMilliseconds": string;
    }
    interface GenericCountdownTimer {
        "formatTimeCallback": (timeInMilliSeconds: number) => string;
        "remainingTime": string;
    }
    interface GenericUserInactivity {
        "events": string[];
        "iniactivityTimeInMilliseconds": string;
        "whenActiveCallback": (remainingTime: any) => any;
        "whenInactiveCallback": () => any;
    }
}
declare global {
    interface HTMLCustomInactiveLogoutElement extends Components.CustomInactiveLogout, HTMLStencilElement {
    }
    var HTMLCustomInactiveLogoutElement: {
        prototype: HTMLCustomInactiveLogoutElement;
        new (): HTMLCustomInactiveLogoutElement;
    };
    interface HTMLGenericCountdownTimerElement extends Components.GenericCountdownTimer, HTMLStencilElement {
    }
    var HTMLGenericCountdownTimerElement: {
        prototype: HTMLGenericCountdownTimerElement;
        new (): HTMLGenericCountdownTimerElement;
    };
    interface HTMLGenericUserInactivityElement extends Components.GenericUserInactivity, HTMLStencilElement {
    }
    var HTMLGenericUserInactivityElement: {
        prototype: HTMLGenericUserInactivityElement;
        new (): HTMLGenericUserInactivityElement;
    };
    interface HTMLElementTagNameMap {
        "custom-inactive-logout": HTMLCustomInactiveLogoutElement;
        "generic-countdown-timer": HTMLGenericCountdownTimerElement;
        "generic-user-inactivity": HTMLGenericUserInactivityElement;
    }
}
declare namespace LocalJSX {
    interface CustomInactiveLogout {
        "logoutTimeInMilliseconds"?: string;
    }
    interface GenericCountdownTimer {
        "formatTimeCallback"?: (timeInMilliSeconds: number) => string;
        "remainingTime"?: string;
    }
    interface GenericUserInactivity {
        "events"?: string[];
        "iniactivityTimeInMilliseconds"?: string;
        "whenActiveCallback"?: (remainingTime: any) => any;
        "whenInactiveCallback"?: () => any;
    }
    interface IntrinsicElements {
        "custom-inactive-logout": CustomInactiveLogout;
        "generic-countdown-timer": GenericCountdownTimer;
        "generic-user-inactivity": GenericUserInactivity;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "custom-inactive-logout": LocalJSX.CustomInactiveLogout & JSXBase.HTMLAttributes<HTMLCustomInactiveLogoutElement>;
            "generic-countdown-timer": LocalJSX.GenericCountdownTimer & JSXBase.HTMLAttributes<HTMLGenericCountdownTimerElement>;
            "generic-user-inactivity": LocalJSX.GenericUserInactivity & JSXBase.HTMLAttributes<HTMLGenericUserInactivityElement>;
        }
    }
}
